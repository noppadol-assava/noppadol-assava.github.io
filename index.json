[{"authors":null,"categories":null,"content":"I am currently a data scientist at AIA Thailand. My areas of interest are Machine learning and Data Mining. I experienced working in various data mining projects by using Python. I am eager to learn new knowledge and love to find a better solution to a problem. In addition, I am interested in finding new experiences and working with people in a cross-cultural team.\n  Download my resumé.\n","date":1660953600,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1660953600,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"I am currently a data scientist at AIA Thailand. My areas of interest are Machine learning and Data Mining. I experienced working in various data mining projects by using Python. I am eager to learn new knowledge and love to find a better solution to a problem.","tags":null,"title":"Noppadol Assavakamhaenghan","type":"authors"},{"authors":["Noppadol Assavakamhaenghan","Waralee Tanaphantaruk","Ponlakit Suwanworaboon","Morakot Choetkiertikul","Suppawong Tuarob"],"categories":["During Bachelor Degree"],"content":"","date":1660953600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1660953600,"objectID":"8ed36bef597c4908e530254fe5e86547","permalink":"https://noppadol-assava.github.io/publication/ause_2022/","publishdate":"2022-08-21T19:04:47+09:00","relpermalink":"/publication/ause_2022/","section":"publication","summary":"It is undeniable that software development is a team-based activity. The quality of the delivered product highly depends on the team configuration. However, selecting an appropriate team to complete a software task is non-trivial, as it needs to consider team compatibility in multiple aspects. While extensive literature introduced multiple team recommendation algorithms, such algorithms are not designed to support the specific roles in software teams. This paper proposes a novel set of metrics for measuring five dimensions of a software team’s effectiveness, including historical collaboration, team cohesiveness, teammate interaction, team members’ expertise, and role experience. Furthermore, Wining Experience-based Software Team RECommendation (WESTREC) is introduced to solve the software team recommendation problem. WESTREC considers multiple aspects of team characteristics, including historical collaboration, team cohesiveness, teammate interaction, project description, team members’ expertise, and role experience. Specifically, given a software project, a machine learning based team scoring function is used along with the Max-Logit algorithm to approximate and recommend suitable software team configurations for the given task. We validate the effectiveness of the WESTREC on real-world software development datasets (i.e., Atlassian and Apache). Furthermore, we study the factors that affect the performance of collaborative software development and propose a method to evaluate the effectiveness of a software team. The results show that WESTREC outperforms state-of-the-art baseline approaches in three out of five groups of team effectiveness metrics associated with different team characteristics in large software systems. Our research findings not only illustrate the efficacy of automatic software team evaluation using machine learning techniques but also serve as building blocks for potential applications that involve automatic team formation and evaluation, such as automatic recommendation of research collaborators and grouping personnel for team-based projects.","tags":["Collaborative Software Development","Machine Learning","Knowledge Graph","Software Team Effectiveness","Team Recommendation"],"title":"Quantifying effectiveness of team recommendation for collaborative software development","type":"publication"},{"authors":[],"categories":[],"content":"","date":16524e5,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":16524e5,"objectID":"e1827c831da0805d5e99f263a1290d89","permalink":"https://noppadol-assava.github.io/project/torlib/","publishdate":"2022-05-13T00:00:00Z","relpermalink":"/project/torlib/","section":"project","summary":"This project is my personal project to put my Python utility script that could be useful together and share with other.","tags":[],"title":"torlib Python package","type":"project"},{"authors":[],"categories":[],"content":"Recommendation systems have played a large role in the Software Engineering research landscape. Applications have ranged from source code elements, APIs and reviewer recommendations, with techniques borrowed from the Information Retrieval, and Machine Learning domains. In recent times, there has been work into a new method of interaction, which is ChatBots, especially for Software Engineering. Early work has been aimed at using bots for mining software repositories, providing task-oriented feedback for the software developer. In this work, we would like to take the ChatBots one step forward, but using them inconjunction with recommendation systems to provide an interactive experience for recommendations. As a case study, we focus on the existing reviewer recommendation systems, and propose how using a ChatBot may enhance the solution, to provide a more accurate and realistic recommendation for the practitioner. In the end, we highlight the potential and next steps to utilize ChatBots into existing Software Engineering recommendation systems.\n","date":1637712e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1637712e3,"objectID":"a4530ec08a61eb46b5eab4b0cf55a736","permalink":"https://noppadol-assava.github.io/project/chatbot/","publishdate":"2021-11-24T00:00:00Z","relpermalink":"/project/chatbot/","section":"project","summary":"This project explores the potential usage of chatbots in the software engineering area. A published work focused on the use of chatbots in software code review.","tags":[],"title":"Chatbot Project","type":"project"},{"authors":["Noppadol Assavakamhaenghan","Raula KulaGaikovina","Kenichi Matsumoto"],"categories":["During Master Degree"],"content":"","date":1637712e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1637712e3,"objectID":"464eba92c899e999c76231b8da70f964","permalink":"https://noppadol-assava.github.io/publication/snpd_2021/","publishdate":"2022-04-18T02:03:07+09:00","relpermalink":"/publication/snpd_2021/","section":"publication","summary":"Recommendation systems have played a large role in the Software Engineering research landscape. Applications have ranged from source code elements, APIs and reviewer recommendations, with techniques borrowed from the Information Retrieval, and Machine Learning domains. In recent times, there has been work into a new method of interaction, which is ChatBots, especially for Software Engineering. Early work has been aimed at using bots for mining software repositories, providing task-oriented feedback for the software developer. In this work, we would like to take the ChatBots one step forward, but using them inconjunction with recommendation systems to provide an interactive experience for recommendations. As a case study, we focus on the existing reviewer recommendation systems, and propose how using a ChatBot may enhance the solution, to provide a more accurate and realistic recommendation for the practitioner. In the end, we highlight the potential and next steps to utilize ChatBots into existing Software Engineering recommendation systems.","tags":["ChatBot","Code Review","Machine Learning"],"title":"Interactive ChatBots for Software Engineering: A Case Study of Code Reviewer Recommendation","type":"publication"},{"authors":["Suppawong Tuarob","Noppadol Assavakamhaenghan","Waralee Tanaphantaruk","Ponlakit Suwanworaboon","Saeed-Ul Hassan","Morakot Choetkiertikul"],"categories":["During Bachelor Degree"],"content":"","date":1620345600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1620345600,"objectID":"f2ec7a27e92d5dac36c9c2344c58e10d","permalink":"https://noppadol-assava.github.io/publication/emse_2021/","publishdate":"2022-04-17T21:12:23+09:00","relpermalink":"/publication/emse_2021/","section":"publication","summary":"In large-scale collaborative software development, building a team of software practitioners can be challenging, mainly due to overloading choices of candidate members to fill in each role. Furthermore, having to understand all members’ diverse backgrounds, and anticipate team compatibility could significantly complicate and attenuate such a team formation process. Current solutions that aim to automatically suggest software practitioners for a task merely target particular roles, such as developers, reviewers, and integrators. While these existing approaches could alleviate issues presented by choice overloading, they fail to address team compatibility while members collaborate. In this paper, we propose RECAST, an intelligent recommendation system that suggests team configurations that satisfy not only the role requirements, but also the necessary technical skills and teamwork compatibility, given task description and a task assignee. Specifically, RECAST uses Max-Logit to intelligently enumerate and rank teams based on the team-fitness scores. Machine learning algorithms are adapted to generate a scoring function that learns from heterogenous features characterizing effective software teams in large-scale collaborative software development. RECAST is evaluated against a state-of-the-art team recommendation algorithm using three well-known open-source software project datasets. The evaluation results are promising, illustrating that our proposed method outperforms the baselines in terms of team recommendation with 646% improvement (MRR) using the exact-match evaluation protocol.","tags":["Team Recommendation","Collaborative Software Development","Machine learning"],"title":"Automatic team recommendation for collaborative software development","type":"publication"},{"authors":["Noppadol Assavakamhaenghan","Supatsara Wattanakriengkrai","Naomichi Shimada","Raula KulaGaikovina","Takashi Ishio","Kenichi Matsumoto"],"categories":["During Master Degree"],"content":"","date":1617753600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1617753600,"objectID":"3d957171ec9a602548289c8e881e80a4","permalink":"https://noppadol-assava.github.io/publication/msr_2021/","publishdate":"2022-04-17T21:41:36+09:00","relpermalink":"/publication/msr_2021/","section":"publication","summary":"**Context:** Open Source Software (OSS) projects rely on a continuous stream of new contributors for sustainable livelihood. Recent studies reported that new contributors experience many barriers in their first contribution. One of the critical barriers is the social barrier. Although a number of studies investigated the social barriers to new contributors, to the best of our knowledge, the relationship between the first response to the first contributions and their future contributions has not been studied comprehensively. **Objective:** In this registered report, we introduce the study protocols that investigate the correlation between the first response given to the first contributions and the future contribution. First, we performed a preliminary survey to manually explore the sentiments of the first response. Preliminary analysis confirms that the first responses are mainly neutral. **Method:** Our execution plan includes both qualitative and quantitative approaches with three research questions. We inspect the first response of the first contributions, investigate the effects of characteristics of the first response to the interaction between first-time-contributor and project contributors, and find the impact of the interactions between other contributors.","tags":["First Contribution","Sentiment and Toxicity","First Response","Newcomer"],"title":"Does the First-Response Matter for Future Contributions? A Study of First Contributions","type":"publication"},{"authors":[],"categories":[],"content":"Open Source Software (OSS) projects rely on a continuous stream of new contributors for sustainable livelihood. Recent studies reported that new contributors experience many barriers in their first contribution. One of the critical barriers is the social barrier. Although a number of studies investigated the social barriers to new contributors, to the best of our knowledge, the relationship between the first response to the first contributions and their future contributions has not been studied comprehensively. In this project, we introduce the study protocols that investigate the correlation between the first response given to the first contributions and the future contribution. First, we performed a preliminary survey to manually explore the sentiments of the first response. Preliminary analysis confirms that the first responses are mainly neutral. Our execution plan includes both qualitative and quantitative approaches with three research questions. We inspect the first response of the first contributions, investigate the effects of characteristics of the first response to the interaction between first-time-contributor and project contributors, and find the impact of the interactions between other contributors.\n","date":1617753600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1617753600,"objectID":"cdfd722f7f3cc995f83b711f0705efa2","permalink":"https://noppadol-assava.github.io/project/first_response/","publishdate":"2021-04-07T00:00:00Z","relpermalink":"/project/first_response/","section":"project","summary":"This project aims to investigate the first response (comment) characteristics of pull requests in open source software projects.","tags":[],"title":"First Response Analysis","type":"project"},{"authors":["Noppadol Assavakamhaenghan","Ponlakit Suwanworaboon","Waralee Tanaphantaruk","Suppawong Tuarob","Morakot Choetkiertikul"],"categories":["During Bachelor Degree"],"content":"","date":1596499200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1596499200,"objectID":"8d662d129aedaf2233f1a3d2f1e5e356","permalink":"https://noppadol-assava.github.io/publication/ecti-con_2020/","publishdate":"2022-04-17T20:38:43+09:00","relpermalink":"/publication/ecti-con_2020/","section":"publication","summary":"Software development is a team-based intensive activity where various skills (e.g. technical and analysis skills) are required to deliver high quality outcomes. An effective team member assignment is thus a crucial process. In this paper, we propose to adopt the existing machine learning approach for team recommendation to recommend software team members who are suitable for a given task. The approach take both individual strength and collaborative efficiency among team members into account to give a recommendation. We evaluate the approach on the Moodle project, well-known open source software project. The evaluation results show that the adopted approach yields a better recommendation performance compared to the baseline (i.e. random assignment approach).","tags":["Team Member Configuration","Issue Tracking Systems","Reopened Issues","Machine Learning"],"title":"Towards Team Formation in Software Development: A Case Study of Moodle","type":"publication"},{"authors":["Noppadol Assavakamhaenghan","Morakot Choetkiertikul","Suppawong Tuarob","Raula KulaGaikovina","Hideaki Hata","Chaiyong Ragkhitwetsagul","Thanwadee Sunetnanta","Kenichi Matsumoto"],"categories":["During Bachelor Degree"],"content":"","date":1577664e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577664e3,"objectID":"29a86964efa93bd461e0993fe77abaca","permalink":"https://noppadol-assava.github.io/publication/iwesep_2019/","publishdate":"2022-04-17T19:44:22+09:00","relpermalink":"/publication/iwesep_2019/","section":"publication","summary":"Many open source projects organize teams to collaboratively manage their software development activities (i.e. issue resolution processes). Therefore good configurations of software development teams can be an important factor, as effective allocation and completion of tasks may result in a more effective activity (i.e. changing configurations after an issue is reopened). To validate this assumption, we present an exploratory study on software team member configuration when resolving issues. We mine the JIRA issue tracking system to assess whether different team member configurations are quicker to resolve issues after being reopened. In a case study of Moodle, our results confirm that the combinations of team members in different roles correlate with reopened issues and the changing of team members is found to resolve those reopened issues. Moreover, the study shows that the issue type is an important factor when assigning team members.","tags":["Team Member Configuration","Issue Tracking Systems","Reopened Issues"],"title":"Software Team Member Configurations: A Study of Team Effectiveness in Moodle","type":"publication"},{"authors":[],"categories":[],"content":"In large-scale collaborative software development, building a team of software practitioners can be challenging, mainly due to overloading choices of candidate members to fill in each role. Furthermore, having to understand all members’ diverse backgrounds, and anticipate team compatibility could significantly complicate and attenuate such a team formation process. Current solutions that aim to automatically suggest software practitioners for a task merely target particular roles, such as developers, reviewers, and integrators. While these existing approaches could alleviate issues presented by choice overloading, they fail to address team compatibility while members collaborate. In this project, we propose RECAST, an intelligent recommendation system that suggests team configurations that satisfy not only the role requirements, but also the necessary technical skills and teamwork compatibility, given task description and a task assignee. Specifically, RECAST uses Max-Logit to intelligently enumerate and rank teams based on the team-fitness scores. Machine learning algorithms are adapted to generate a scoring function that learns from heterogenous features characterizing effective software teams in large-scale collaborative software development. RECAST is evaluated against a state-of-the-art team recommendation algorithm using three well-known open-source software project datasets. The evaluation results are promising, illustrating that our proposed method outperforms the baselines in terms of team recommendation with 646% improvement (MRR) using the exact-match evaluation protocol.\n","date":1577664e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577664e3,"objectID":"5efb1bae05b77824b4840b98b83f7e9e","permalink":"https://noppadol-assava.github.io/project/software_team_rec/","publishdate":"2019-12-30T00:00:00Z","relpermalink":"/project/software_team_rec/","section":"project","summary":"This project aims develop an algorithm for recommending software teams for a given task and its role requirements.","tags":[],"title":"Software Team Recommendation","type":"project"}]
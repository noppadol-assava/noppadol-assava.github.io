[{"authors":null,"categories":null,"content":"I am currently a master’s student in Software Engineering Laboratory, Nara Institute of Science and Technology. My areas of interest are Data Science, Machine learning and Software Engineering. I experienced working in various data mining projects by using Python. I am eager to learn new knowledge and love to find a better solution to a problem. In addition, I am interested in finding new experiences and working with people in a cross-cultural team.\n  Download my resumé.\n","date":1637712e3,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1637712e3,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"I am currently a master’s student in Software Engineering Laboratory, Nara Institute of Science and Technology. My areas of interest are Data Science, Machine learning and Software Engineering. I experienced working in various data mining projects by using Python.","tags":null,"title":"Noppadol Assavakamhaenghan","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://noppadol-assava.github.io/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":[],"categories":[],"content":"Recommendation systems have played a large role in the Software Engineering research landscape. Applications have ranged from source code elements, APIs and reviewer recommendations, with techniques borrowed from the Information Retrieval, and Machine Learning domains. In recent times, there has been work into a new method of interaction, which is ChatBots, especially for Software Engineering. Early work has been aimed at using bots for mining software repositories, providing task-oriented feedback for the software developer. In this work, we would like to take the ChatBots one step forward, but using them inconjunction with recommendation systems to provide an interactive experience for recommendations. As a case study, we focus on the existing reviewer recommendation systems, and propose how using a ChatBot may enhance the solution, to provide a more accurate and realistic recommendation for the practitioner. In the end, we highlight the potential and next steps to utilize ChatBots into existing Software Engineering recommendation systems.\n","date":1637712e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1637712e3,"objectID":"a4530ec08a61eb46b5eab4b0cf55a736","permalink":"https://noppadol-assava.github.io/project/chatbot/","publishdate":"2021-11-24T00:00:00Z","relpermalink":"/project/chatbot/","section":"project","summary":"This project explores the potential usage of chatbots in the software engineering area. A published work focused on the use of chatbots in software code review.","tags":[],"title":"Chatbot Project","type":"project"},{"authors":["Noppadol Assavakamhaenghan","Raula KulaGaikovina","Kenichi Matsumoto"],"categories":["During Master Degree"],"content":"","date":1637712e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1637712e3,"objectID":"464eba92c899e999c76231b8da70f964","permalink":"https://noppadol-assava.github.io/publication/snpd_2021/","publishdate":"2022-04-18T02:03:07+09:00","relpermalink":"/publication/snpd_2021/","section":"publication","summary":"Recommendation systems have played a large role in the Software Engineering research landscape. Applications have ranged from source code elements, APIs and reviewer recommendations, with techniques borrowed from the Information Retrieval, and Machine Learning domains. In recent times, there has been work into a new method of interaction, which is ChatBots, especially for Software Engineering. Early work has been aimed at using bots for mining software repositories, providing task-oriented feedback for the software developer. In this work, we would like to take the ChatBots one step forward, but using them inconjunction with recommendation systems to provide an interactive experience for recommendations. As a case study, we focus on the existing reviewer recommendation systems, and propose how using a ChatBot may enhance the solution, to provide a more accurate and realistic recommendation for the practitioner. In the end, we highlight the potential and next steps to utilize ChatBots into existing Software Engineering recommendation systems.","tags":["ChatBot","Code Review","Machine Learning"],"title":"Interactive ChatBots for Software Engineering: A Case Study of Code Reviewer Recommendation","type":"publication"},{"authors":["Suppawong Tuarob","Noppadol Assavakamhaenghan","Waralee Tanaphantaruk","Ponlakit Suwanworaboon","Saeed-Ul Hassan","Morakot Choetkiertikul"],"categories":["During Bachelor Degree"],"content":"","date":1620345600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1620345600,"objectID":"f2ec7a27e92d5dac36c9c2344c58e10d","permalink":"https://noppadol-assava.github.io/publication/emse_2021/","publishdate":"2022-04-17T21:12:23+09:00","relpermalink":"/publication/emse_2021/","section":"publication","summary":"In large-scale collaborative software development, building a team of software practitioners can be challenging, mainly due to overloading choices of candidate members to fill in each role. Furthermore, having to understand all members’ diverse backgrounds, and anticipate team compatibility could significantly complicate and attenuate such a team formation process. Current solutions that aim to automatically suggest software practitioners for a task merely target particular roles, such as developers, reviewers, and integrators. While these existing approaches could alleviate issues presented by choice overloading, they fail to address team compatibility while members collaborate. In this paper, we propose RECAST, an intelligent recommendation system that suggests team configurations that satisfy not only the role requirements, but also the necessary technical skills and teamwork compatibility, given task description and a task assignee. Specifically, RECAST uses Max-Logit to intelligently enumerate and rank teams based on the team-fitness scores. Machine learning algorithms are adapted to generate a scoring function that learns from heterogenous features characterizing effective software teams in large-scale collaborative software development. RECAST is evaluated against a state-of-the-art team recommendation algorithm using three well-known open-source software project datasets. The evaluation results are promising, illustrating that our proposed method outperforms the baselines in terms of team recommendation with 646% improvement (MRR) using the exact-match evaluation protocol.","tags":["Team Recommendation","Collaborative Software Development","Machine learning"],"title":"Automatic team recommendation for collaborative software development","type":"publication"},{"authors":["Noppadol Assavakamhaenghan","Supatsara Wattanakriengkrai","Naomichi Shimada","Raula KulaGaikovina","Takashi Ishio","Kenichi Matsumoto"],"categories":["During Master Degree"],"content":"","date":1617753600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1617753600,"objectID":"3d957171ec9a602548289c8e881e80a4","permalink":"https://noppadol-assava.github.io/publication/msr_2021/","publishdate":"2022-04-17T21:41:36+09:00","relpermalink":"/publication/msr_2021/","section":"publication","summary":"**Context:** Open Source Software (OSS) projects rely on a continuous stream of new contributors for sustainable livelihood. Recent studies reported that new contributors experience many barriers in their first contribution. One of the critical barriers is the social barrier. Although a number of studies investigated the social barriers to new contributors, to the best of our knowledge, the relationship between the first response to the first contributions and their future contributions has not been studied comprehensively. **Objective:** In this registered report, we introduce the study protocols that investigate the correlation between the first response given to the first contributions and the future contribution. First, we performed a preliminary survey to manually explore the sentiments of the first response. Preliminary analysis confirms that the first responses are mainly neutral. **Method:** Our execution plan includes both qualitative and quantitative approaches with three research questions. We inspect the first response of the first contributions, investigate the effects of characteristics of the first response to the interaction between first-time-contributor and project contributors, and find the impact of the interactions between other contributors.","tags":["First Contribution","Sentiment and Toxicity","First Response","Newcomer"],"title":"Does the First-Response Matter for Future Contributions? A Study of First Contributions","type":"publication"},{"authors":[],"categories":[],"content":"Open Source Software (OSS) projects rely on a continuous stream of new contributors for sustainable livelihood. Recent studies reported that new contributors experience many barriers in their first contribution. One of the critical barriers is the social barrier. Although a number of studies investigated the social barriers to new contributors, to the best of our knowledge, the relationship between the first response to the first contributions and their future contributions has not been studied comprehensively. In this project, we introduce the study protocols that investigate the correlation between the first response given to the first contributions and the future contribution. First, we performed a preliminary survey to manually explore the sentiments of the first response. Preliminary analysis confirms that the first responses are mainly neutral. Our execution plan includes both qualitative and quantitative approaches with three research questions. We inspect the first response of the first contributions, investigate the effects of characteristics of the first response to the interaction between first-time-contributor and project contributors, and find the impact of the interactions between other contributors.\n","date":1617753600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1617753600,"objectID":"cdfd722f7f3cc995f83b711f0705efa2","permalink":"https://noppadol-assava.github.io/project/first_response/","publishdate":"2021-04-07T00:00:00Z","relpermalink":"/project/first_response/","section":"project","summary":"This project aims to investigate the first response (comment) characteristics of pull requests in open source software projects.","tags":[],"title":"First Response Analysis","type":"project"},{"authors":["Noppadol Assavakamhaenghan","吳恩達"],"categories":["Demo","教程"],"content":"Overview  The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site The template can be modified and customised to suit your needs. It’s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a no-code solution (write in Markdown and customize with YAML parameters) and having flexibility to later add even deeper personalization with HTML and CSS You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more    The template is mobile first with a responsive design to ensure that your site looks stunning on every device.  Get Started  👉 Create a new site 📚 Personalize your site 💬 Chat with the Wowchemy community or Hugo community 🐦 Twitter: @wowchemy @GeorgeCushen #MadeWithWowchemy 💡 Request a feature or report a bug for Wowchemy ⬆️ Updating Wowchemy? View the Update Tutorial and Release Notes  Crowd-funded open-source software To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.\n❤️ Click here to become a sponsor and help support Wowchemy’s future ❤️ As a token of appreciation for sponsoring, you can unlock these awesome rewards and extra features 🦄✨\nEcosystem  Hugo Academic CLI: Automatically import publications from BibTeX  Inspiration Check out the latest demo of what you’ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\nFeatures  Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 34+ language packs including English, 中文, and Português Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files.  Themes Wowchemy and its templates come with automatic day (light) and night (dark) mode built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the Demo to see it in action! Day/night mode can also be disabled by the site admin in params.toml.\nChoose a stunning theme and font for your site. Themes are fully customizable.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1607817600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607817600,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://noppadol-assava.github.io/post/getting-started/","publishdate":"2020-12-13T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Welcome 👋 We know that first impressions are important, so we've populated your new site with some initial content to help you get familiar with everything in no time.","tags":["Academic","开源"],"title":"Welcome to Wowchemy, the website builder for Hugo","type":"post"},{"authors":["Noppadol Assavakamhaenghan","Ponlakit Suwanworaboon","Waralee Tanaphantaruk","Suppawong Tuarob","Morakot Choetkiertikul"],"categories":["During Bachelor Degree"],"content":"","date":1596499200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1596499200,"objectID":"8d662d129aedaf2233f1a3d2f1e5e356","permalink":"https://noppadol-assava.github.io/publication/ecti-con_2020/","publishdate":"2022-04-17T20:38:43+09:00","relpermalink":"/publication/ecti-con_2020/","section":"publication","summary":"Software development is a team-based intensive activity where various skills (e.g. technical and analysis skills) are required to deliver high quality outcomes. An effective team member assignment is thus a crucial process. In this paper, we propose to adopt the existing machine learning approach for team recommendation to recommend software team members who are suitable for a given task. The approach take both individual strength and collaborative efficiency among team members into account to give a recommendation. We evaluate the approach on the Moodle project, well-known open source software project. The evaluation results show that the adopted approach yields a better recommendation performance compared to the baseline (i.e. random assignment approach).","tags":["Team Member Configuration","Issue Tracking Systems","Reopened Issues","Machine Learning"],"title":"Towards Team Formation in Software Development: A Case Study of Moodle","type":"publication"},{"authors":["Noppadol Assavakamhaenghan","Morakot Choetkiertikul","Suppawong Tuarob","Raula KulaGaikovina","Hideaki Hata","Chaiyong Ragkhitwetsagul","Thanwadee Sunetnanta","Kenichi Matsumoto"],"categories":["During Bachelor Degree"],"content":"","date":1577664e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577664e3,"objectID":"29a86964efa93bd461e0993fe77abaca","permalink":"https://noppadol-assava.github.io/publication/iwesep_2019/","publishdate":"2022-04-17T19:44:22+09:00","relpermalink":"/publication/iwesep_2019/","section":"publication","summary":"Many open source projects organize teams to collaboratively manage their software development activities (i.e. issue resolution processes). Therefore good configurations of software development teams can be an important factor, as effective allocation and completion of tasks may result in a more effective activity (i.e. changing configurations after an issue is reopened). To validate this assumption, we present an exploratory study on software team member configuration when resolving issues. We mine the JIRA issue tracking system to assess whether different team member configurations are quicker to resolve issues after being reopened. In a case study of Moodle, our results confirm that the combinations of team members in different roles correlate with reopened issues and the changing of team members is found to resolve those reopened issues. Moreover, the study shows that the issue type is an important factor when assigning team members.","tags":["Team Member Configuration","Issue Tracking Systems","Reopened Issues"],"title":"Software Team Member Configurations: A Study of Team Effectiveness in Moodle","type":"publication"},{"authors":[],"categories":[],"content":"In large-scale collaborative software development, building a team of software practitioners can be challenging, mainly due to overloading choices of candidate members to fill in each role. Furthermore, having to understand all members’ diverse backgrounds, and anticipate team compatibility could significantly complicate and attenuate such a team formation process. Current solutions that aim to automatically suggest software practitioners for a task merely target particular roles, such as developers, reviewers, and integrators. While these existing approaches could alleviate issues presented by choice overloading, they fail to address team compatibility while members collaborate. In this project, we propose RECAST, an intelligent recommendation system that suggests team configurations that satisfy not only the role requirements, but also the necessary technical skills and teamwork compatibility, given task description and a task assignee. Specifically, RECAST uses Max-Logit to intelligently enumerate and rank teams based on the team-fitness scores. Machine learning algorithms are adapted to generate a scoring function that learns from heterogenous features characterizing effective software teams in large-scale collaborative software development. RECAST is evaluated against a state-of-the-art team recommendation algorithm using three well-known open-source software project datasets. The evaluation results are promising, illustrating that our proposed method outperforms the baselines in terms of team recommendation with 646% improvement (MRR) using the exact-match evaluation protocol.\n","date":1577664e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577664e3,"objectID":"5efb1bae05b77824b4840b98b83f7e9e","permalink":"https://noppadol-assava.github.io/project/software_team_rec/","publishdate":"2019-12-30T00:00:00Z","relpermalink":"/project/software_team_rec/","section":"project","summary":"This project aims develop an algorithm for recommending software teams for a given task and its role requirements.","tags":[],"title":"Software Team Recommendation","type":"project"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;)   Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three   A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}}   Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }   Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://noppadol-assava.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"}]